@{
    ViewBag.Title = "人員權限管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section css {
    <link rel="stylesheet" href="@Href("~/Scripts/base/easyui/themes/icon.css")" />
    <link rel="stylesheet" href="@Href("~/Scripts/base/easyui/themes/bootstrap/easyui.css")" />
}

<h2>人員權限管理</h2>

<table id="userGrid" class="easyui-datagrid" style="width:100%;">
    <thead>
        <tr>
            <th data-options="field:'UserNo',width:80,align:'left'">工號</th>
            <th data-options="field:'UserName',width:100,align:'left'">名稱</th>
            <th data-options="field:'DepartmentName',width:100,align:'left'">部門</th>
            <th data-options="field:'Email',width:100,align:'left'">信箱</th>
            <th data-options="field:'RoleId',width:80,align:'left',formatter:formatRole">權限角色</th>
            <th data-options="field:'IsActive',width:40,align:'center',formatter:formatActive">是否啟用</th>
            <th data-options="field:'ReciveAlarmFlag',width:40,align:'center',formatter:formatActive">是否收到警報</th>
            <th data-options="field:'Opt',width:60,align:'center',formatter:formatActive">編輯</th>
        </tr>
    </thead>
</table>

<div id="toolbar" style="padding:5px; display:flex; align-items:center">
    <a href="javascript:void(0)" class="custom-easyui-button" onclick="openUserDialog()">新增</a>
    <a href="javascript:void(0)" class="custom-easyui-button" onclick="editSelectedUser()">編輯</a>
    <a href="javascript:void(0)" class="custom-easyui-button" onclick="deleteSelectedUser()">刪除</a>
    <span style="margin-left: 20px; color: #666; font-size: 12px;">
        <i class="fa fa-info-circle"></i> 提示：雙擊列表項目可直接編輯;    有登入的人皆可觀看全部，但只有群組權限的人能做特定編輯。
    </span>
</div>

<!-- 新增／編輯 Dialog -->
<div id="userDlg" class="easyui-dialog" style="width:400px" closed="true" buttons="#userDlg-buttons" modal="true">
    <form id="userForm" method="post" style="padding:10px">
        <!-- 只留一個 combobox，讓使用者從「全體員工」裡選一筆 -->
        <div style="margin-bottom:10px">
            <label>選擇員工：</label>
            <select id="EmployeeSelect" class="easyui-combobox" style="width:100%" name="UserNo"
                    data-options="prompt:'請輸入工號或姓名搜尋...'"></select>

        </div>

        <!-- 隱藏欄位：UserName, DepartmentName -->
        <input type="hidden" name="UserName" id="UserName" />
        <input type="hidden" name="DepartmentName" id="DepartmentName" />
        <input type="hidden" name="Email" id="Email" />

        <!-- 接著再選「角色」和「是否啟用」 -->
        <div style="margin-bottom:10px">
            <label>群組：</label>
            <select name="RoleId" id="RoleId" class="easyui-combobox" style="width:100%;"
                    data-options="valueField:'id', textField:'name', panelHeight:'auto'">
                <!-- 程式碼裡用 loadData(roleOptions) 載入 -->
            </select>
        </div>
        <div style="margin-bottom:15px">
            <label style="display:block; margin-bottom:5px; font-weight:bold;">啟用狀態：</label>
            <label style="cursor:pointer;">
                <input type="checkbox" name="IsActive" id="IsActive" style="margin-right:5px;" />
                是否能夠擁有對應群組編輯權限
            </label>
            <label style="display:block; margin-bottom:5px; font-weight:bold;">警報發送：</label>
            <label style="cursor:pointer;">
                <input type="checkbox" name="ReciveAlarmFlag" id="ReciveAlarmFlag" style="margin-right:5px;" />
                是否接受警報發送
            </label>
        </div>
    </form>
</div>
<div id="userDlg-buttons" style="display:flex; justify-content:end">
    <a href="javascript:void(0)" class="custom-easyui-button" onclick="saveUser()">儲存</a>
    <a href="javascript:void(0)" class="custom-easyui-button" onclick="$('#userDlg').dialog('close')">取消</a>
</div>

@section Scripts {
    <script src="~/Scripts/base/easyui/jquery.easyui.min.js"></script>
    <script>
        // 全域儲存：角色清單 & 公司全體員工清單
        let roleOptions = [];
        let employeeOptions = [];
        let isEditMode = false;

        $(function () {
            // 1. 先同步抓取「所有角色列表」
            $.ajax({
                url: '@Url.Action("GetActiveRoles", "Permission")',
                method: 'GET',
                dataType: 'json',
                async: false,
                success: function (res) {
                    if (res.success) {
                        roleOptions = res.data.map(r => ({
                            id:   r.RoleId,
                            name: r.RoleName
                        }));
                    } else {
                        alert('無法載入角色清單');
                    }
                },
                error: function () {
                    alert('無法載入角色清單');
                }
            });

            // 2. 同步抓取「公司全體員工名單」
            $.ajax({
                url: '@Url.Action("GetAllEmployees", "Permission")',
                method: 'GET',
                dataType: 'json',
                async: false,
                success: function (res) {
                    if (res.success) {
                        employeeOptions = res.data.map(u => ({
                            value: u.UserNo,
                            text:  `${u.UserNo}　${u.UserName}　(${u.DepartmentName})`,
                            UserName:  u.UserName,
                            Email: u.Email,
                            DepartmentName: u.DepartmentName,
                        }));
                    } else {
                        alert('無法載入員工名單');
                    }
                },
                error: function () {
                    alert('無法載入員工名單');
                }
            });

            // 3. 初始化 DataGrid，顯示現有使用者
            $('#userGrid').datagrid({
                url: '@Url.Action("GetUsers", "Permission")',
                method: 'get',
                toolbar: '#toolbar',
                fitColumns: true,
                singleSelect: true,
                panelHeight: '350',
                loadFilter: function(response) {
                    return {
                        total: response.rows ? response.rows.length : 0,
                        rows: response.rows || []
                    };
                },
                columns: [[
                    { field: 'UserNo', title: '工號', width: 80, align: 'left' },
                    { field: 'UserName', title: '名稱', width: 80, align: 'left' },
                    { field: 'DepartmentName', title: '部門', width: 100, align: 'left' },
                    { field: 'Email', title: '信箱', width: 120, align: 'left' },
                    { field: 'RoleId', title: '群組', width: 80, align: 'left', formatter: formatRole },
                    {
                        field: 'IsActive', title: '是否啟用', width: 80, align: 'center',
                        formatter: function (v) {
                            return v
                                ? '<i class="fa fa-check" style="color:green;"></i>'
                                : '<i class="fa fa-times" style="color:red;"></i>';
                        }
                    },
                    {
                        field: 'ReciveAlarmFlag', title: '是否發送警報', width: 80, align: 'center',
                        formatter: function (v) {
                            return v
                                ? '<i class="fa fa-check" style="color:green;"></i>'
                                : '<i class="fa fa-times" style="color:red;"></i>';
                        }
                    },
                    {
                        field: 'Opt',
                        title: '操作',
                        width: 80,
                        align: 'center',
                        formatter: function (value, row, index) {
                            return `<a href="javascript:void(0)" onclick="editUserRow(${index})">編輯</a>`;
                        }
                    }
                ]],
                onDblClickRow: function (index, row) {
                    editUserRow(index);
                },
            });
        });

        function editUserRow(index) {
            $('#userGrid').datagrid('selectRow', index);
            const row = $('#userGrid').datagrid('getSelected');
            editUserDialog(row);
        }

        function deleteUserRow(index) {
            $('#userGrid').datagrid('selectRow', index);
            deleteSelectedUser();
        }


        // 格式化：把 RoleId 轉成人可讀的 RoleName
        function formatRole(value, row, index) {
            if (!value) return '<span style="color:#999;">未設定</span>';
            const id = value.toString();
            const role = roleOptions.find(x => x.id.toString() === id);
            return role ? role.name : '<span style="color:#999;">角色不存在</span>';
        }

        // 格式化操作欄
        function formatOperations(value, row, index) {
            return `
                <a href="javascript:void(0)" onclick="editUserRow(${index})" title="編輯">
                    <i class="fa fa-edit" style="color:#337ab7;"></i>
                </a>
                <a href="javascript:void(0)" onclick="deleteUserRow(${index})" title="刪除" style="margin-left:10px;">
                    <i class="fa fa-trash" style="color:#d9534f;"></i>
                </a>
            `;
        }

        // 格式化：IsActive → 綠色勾勾 or 空白
        function formatActive(value, row, index) {
            return value
                ? '<i class="fa fa-check" style="color: green;"></i>'
                : '';
        }

        // 刪除使用者
        function deleteUser(row) {
            $.messager.confirm('確認刪除',
                `確定要刪除使用者「${row.UserName}」（工號：${row.UserNo}）嗎？<br/><span style="color:red;">此操作無法復原！</span>`,
                function(r) {
                    if (r) {
                        $.ajax({
                            url: '@Url.Action("DeleteUser", "Permission")',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ UserNo: row.UserNo }),
                            success: function (res) {
                                if (res.success) {
                                    $.messager.show({
                                        title: '成功',
                                        msg: '使用者已刪除',
                                        timeout: 2000,
                                        showType: 'slide'
                                    });
                                    $('#userGrid').datagrid('reload');
                                } else {
                                    $.messager.alert('錯誤', res.message || '刪除失敗');
                                }
                            },
                            error: function () {
                                $.messager.alert('錯誤', '刪除時發生錯誤');
                            }
                        });
                    }
                }
            );
        }

        // 編輯選中的使用者
        function editSelectedUser() {
            const row = $('#userGrid').datagrid('getSelected');
            if (!row) {
                $.messager.alert('提示', '請先選擇要編輯的使用者');
                return;
            }
            editUserDialog(row); // 傳遞 row 參數
        }

function openUserDialog() {
    $('#userDlg').dialog('open').dialog('setTitle', '新增使用者');
    $('#userForm').form('clear');

    // 1. 「員工下拉」用純 JS 方式初始化（新增模式不禁用）
    $('#EmployeeSelect').combobox({
        data: employeeOptions,
        valueField: 'value',
        textField: 'text',
        panelHeight: '250',
        disabled: false, // 新增模式啟用
        filter: function (q, row) {
            return row.text.indexOf(q) >= 0;
        },
        onSelect: function (rec) {
            $('#UserName').val(rec.UserName);
            $('#DepartmentName').val(rec.DepartmentName);
            $('#Email').val(rec.Email);
        }
    });

    // 2. 清空 combobox 的預設選擇
    $('#EmployeeSelect').combobox('clear');

    // 3. 初始化「角色下拉」
    $('#RoleId').combobox({
        data: roleOptions,
        valueField: 'id',
        textField: 'name',
        panelHeight: '300'
    });
    $('#RoleId').combobox('clear');

    // 4. 隱藏欄位先空值
    $('#UserName').val('');
    $('#DepartmentName').val('');
    $('#Email').val('');

    // 5. 預設「是否啟用」打勾
    $('#IsActive').prop('checked', true);
    $('#ReciveAlarmFlag').prop('checked', false); // 新增這行
}

// 開啟「編輯使用者」Dialog - 修改為接受參數
function editUserDialog(row) {
    if (!row) {
        alert('請先選擇要編輯的使用者');
        return;
    }

    $.ajax({
        url: '@Url.Action("GetUser", "Permission")',
        method: 'GET',
        dataType: 'json',
        data: { userNo: row.UserNo },
        success: function(response) {
            if (!response.success) {
                alert('讀取使用者資料失敗');
                return;
            }
            const userObj = response.data;
            $('#userDlg').dialog('open').dialog('setTitle', '編輯使用者');

            // 1. 初始化員工下拉（編輯模式下禁用）
            $('#EmployeeSelect').combobox({
                data: employeeOptions,
                valueField: 'value',
                textField: 'text',
                panelHeight: '250',
                disabled: true, // 編輯模式下禁用
                filter: function(q, row) {
                    return row.text.indexOf(q) >= 0;
                },
                onSelect: function(rec) {
                    $('#UserName').val(rec.UserName);
                    $('#DepartmentName').val(rec.DepartmentName);
                }
            });

            // 2. 把當前使用者設為 combobox 選值
            const matched = employeeOptions.find(x => x.value === userObj.UserNo);
            if (matched) {
                $('#EmployeeSelect').combobox('setValue', matched.value);
                $('#UserName').val(matched.UserName);
                $('#DepartmentName').val(matched.DepartmentName);
                $('#Email').val(matched.Email);
            }

            // 3. 初始化角色下拉並設值
            $('#RoleId').combobox({
                data: roleOptions,
                valueField: 'id',
                textField: 'name',
                panelHeight: 'auto'
            });
            $('#RoleId').combobox('setValue', userObj.RoleId ? userObj.RoleId.toString() : '');

            // 4. 設定 IsActive
            $('#IsActive').prop('checked', !!userObj.IsActive);
            $('#ReciveAlarmFlag').prop('checked', !!userObj.ReciveAlarmFlag);
        },
        error: function() {
            alert('讀取使用者資料失敗');
        }
    });
}


        // 儲存使用者（新增 or 更新）
function saveUser() {
   // 1. 驗證必填欄位
   const userNo = $('#EmployeeSelect').combobox('getValue');
   const roleId = $('#RoleId').combobox('getValue');

   if (!userNo) {
       $.messager.alert('提示', '請選擇員工');
       return;
   }
   if (!roleId) {
       $.messager.alert('提示', '請選擇權限角色');
       return;
   }

   // 2. 收集表單資料
   const payload = {
       UserNo: userNo,
       UserName: $('#UserName').val(),
       Email: $('#Email').val(),
       DepartmentName: $('#DepartmentName').val(),
       RoleId: roleId,
       IsActive: $('#IsActive').is(':checked'),
       ReciveAlarmFlag: $('#ReciveAlarmFlag').is(':checked')
   };

   console.log("儲存資料:", payload);

   // 3. 顯示載入狀態
   const $saveBtn = $('#userDlg-buttons .custom-easyui-button:first');
   const originalText = $saveBtn.html();
   $saveBtn.html('<i class="fa fa-spinner fa-spin"></i> 儲存中...').css('pointer-events', 'none');
        
   // 4. 發送請求
           $.ajax({
               url: '@Url.Action("SaveUser", "Permission")',
               type: 'POST',
               contentType: 'application/json',
               data: JSON.stringify(payload),
               success: function (res) {
                   if (res.success) {
                       $.messager.show({
                           title: '成功',
                           msg: res.message || '儲存成功',
                           timeout: 3000,
                           showType: 'slide'
                       });
                       $('#userDlg').dialog('close');
                       $('#userGrid').datagrid('reload');
                   } else {
                       $.messager.alert('錯誤', res.message || '儲存失敗');
                   }
               },
               error: function () {
                   $.messager.alert('錯誤', '儲存使用者時發生錯誤');
               },
               complete: function() {
                   // 恢復按鈕狀態
                   $saveBtn.html(originalText).css('pointer-events', '');
               }
           });
        }

        function deleteSelectedUser() {
            const row = $('#userGrid').datagrid('getSelected');
            if (!row) {
                $.messager.alert('提示', '請先選擇要刪除的使用者');
                return;
            }
            deleteUser(row);
        }
        // 刪除使用者
        function deleteUser() {
            const row = $('#userGrid').datagrid('getSelected');
            if (!row) {
                alert('請先選擇要刪除的使用者');
                return;
            }
            if (confirm(`確定要刪除使用者 ${row.UserName}（工號 ${row.UserNo}）嗎？`)) {
                $.ajax({
                    url: '@Url.Action("DeleteUser", "Permission")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ UserNo: row.UserNo }),
                    success: function (res) {
                        if (res.success) {
                            $('#userGrid').datagrid('reload');
                        } else {
                            alert(res.message || '刪除失敗');
                        }
                    },
                    error: function () {
                        alert('刪除時發生錯誤');
                    }
                });
            }
        }
    </script>
}
